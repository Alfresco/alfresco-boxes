# Alfresco Vagrant Web Box
#
# -*- mode: ruby -*-
# vi: set ft=ruby :
BERKSFILE="Berksfile.multivm"

db_provisioner = JSON.parse(IO.read("packer-allinone-db.json"))["provisioners"][0]
repo_provisioner = JSON.parse(IO.read("packer-allinone-repo.json"))["provisioners"][0]
share_provisioner = JSON.parse(IO.read("packer-allinone-share.json"))["provisioners"][0]
solr_provisioner = JSON.parse(IO.read("packer-allinone-solr.json"))["provisioners"][0]

boxes = Hash.new
boxes[:db] = Hash.new
boxes[:db]['attributes'] = db_provisioner["json"]
boxes[:db]['run_list'] = db_provisioner["run_list"]
boxes[:repo] = Hash.new
boxes[:repo]['attributes'] = repo_provisioner["json"]
boxes[:repo]['run_list'] = repo_provisioner["run_list"]
boxes[:share] = Hash.new
boxes[:share]['attributes'] = share_provisioner["json"]
boxes[:share]['run_list'] = share_provisioner["run_list"]
boxes[:solr] = Hash.new
boxes[:solr]['attributes'] = solr_provisioner["json"]
boxes[:solr]['run_list'] = solr_provisioner["run_list"]

Vagrant.configure("2") do |config|

  if !ENV['MVN_ALF_USER'].nil? and !ENV['MVN_ALF_PASSWORD'].nil?
    attributes[:alfresco][:maven][:repo_type] = "private"
    attributes[:alfresco][:maven][:username] = ENV['MVN_ALF_USERNAME']
    attributes[:alfresco][:maven][:password] = ENV['MVN_ALF_PASSWORD']
  end

  # Vagrant plugins configuration
  config.berkshelf.enabled    = true
  config.berkshelf.berksfile_path = BERKSFILE
  config.omnibus.chef_version = "11.8.0"
  config.vm.provision :hosts
  
  boxes.each do |boxName, box|
    attributes = box['attributes']
    run_list = box['run_list']
    
    config.vm.define boxName do |box|

      box.vm.provider :virtualbox do |vb,override|
        override.vm.box_url         = "http://files.vagrantup.com/precise64.box"
        override.vm.box             = "precise64"
        override.vm.hostname = attributes['hostname']
        override.vm.network "private_network", ip: attributes['ip']
        vb.customize ["modifyvm", :id, "--memory", attributes['memory']]
      end
      config.vm.provision :chef_solo do |chef|
        chef.provisioning_path  = "/tmp/vagrant-chef-solo"
        chef.file_cache_path    = chef.provisioning_path        
        filtered_run_list = []
        run_list.each do |recipe|
          filtered_run_list.push("recipe[#{recipe}]")
        end
        chef.run_list = filtered_run_list
        chef.json = attributes
      end
    end
  end
end

